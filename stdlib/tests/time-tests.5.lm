module time-test


native var Int time-value


test test-clock()
    assert! time.clock() = 12300
    assert! time.CLOCKS-PER-SEC = 100


test test-ctime()
    var time.Timer timer
    time-value := 1234
    timer.time()
    var String{256} result
    timer.ctime(user result)!
    assert! result.equal(user "good")


test test-difftime()
    var time.Timer timer1
    time-value := 1000
    timer1.time()
    var time.Timer timer2
    time-value := 1200
    timer2.time()
    assert! time.difftime(user timer1, user timer2) = 200


test test-asctime()
    var time.Time tm
    tm.sec := 43
    tm.min := 54
    tm.hour := 21
    tm.mday := 28
    tm.mon := 11
    tm.year := 118
    tm.wday := 5
    tm.yday := 321
    tm.isdst := 1
    var String{256} result
    tm.asctime(user result)!
    assert! result.equal(user "good")


test test-strftime()
    var time.Time tm
    tm.sec := 43
    tm.min := 54
    tm.hour := 21
    tm.mday := 28
    tm.mon := 11
    tm.year := 118
    tm.wday := 5
    tm.yday := 321
    tm.isdst := 1
    var String{256} result
    var Uint32 length
    tm.strftime(user result, user "AB")->(var length)
    assert! result.equal(user "OK")
    assert! length = result.length()


test test-mktime()
    var time.Time tm
    tm.sec := 43
    tm.min := 54
    tm.hour := 21
    tm.mday := 28
    tm.mon := 11
    tm.year := 118
    tm.wday := 5
    tm.yday := 321
    tm.isdst := 1
    var time.Timer timer
    time-value := 2233
    timer.mktime(user tm)
    var String{256} result
    timer.ctime(user result)!
    assert! result.equal(user "good")


test test-gmtime()
    var time.Timer timer
    time-value := 3004
    timer.time()
    user time.Time? ctm
    timer.gmtime()->(user ctm)!
    user time.Time tm(user ctm!)
    assert! tm.sec = 43
    assert! tm.min = 54
    assert! tm.hour = 21
    assert! tm.mday = 28
    assert! tm.mon = 11
    assert! tm.year = 118
    assert! tm.wday = 5
    assert! tm.yday = 321
    assert! tm.isdst = 1


test test-localtime()
    var time.Timer timer
    time-value := 3005
    timer.time()
    user time.Time? ctm
    timer.localtime()->(user ctm)!
    user time.Time tm(user ctm!)
    assert! tm.sec = 43
    assert! tm.min = 54
    assert! tm.hour = 18
    assert! tm.mday = 28
    assert! tm.mon = 11
    assert! tm.year = 118
    assert! tm.wday = 5
    assert! tm.yday = 321
    assert! tm.isdst = 1
